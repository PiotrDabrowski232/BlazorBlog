@page "/EditPost/{postId}"


@inject Blog.Logic.Services.Interfaces.IPostService _postService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject NotificationService NotificationService



<h3>Edit Your Post</h3>

@code {

    [Parameter]
    public string postId { get; set; }

    PostDto post = new PostDto();

    protected override async Task OnInitializedAsync()
    {
        post = _postService.GetByPostId<PostDto>(postId);
    }

    protected async Task Edit()
    {
        try
        {
            _postService.UpdatePost(post);
            StateHasChanged();
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Post Updated Succesfully", Duration = 2500 });
            await Task.Delay(2000);
            NavigationManager.NavigateTo("/MyPost");
        }
        catch(Exception e)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Some Problems Occur", Duration = 3000 });
        }
    }
}


<EditForm Model="post" style="width:100%; height:80vh;" OnValidSubmit="Edit">

    <FluentValidationValidator />


    <div class="form-group col-md-4 mb-2 w-100">
        <label for="Title">Title</label>
        <InputText type="Text" class="form-control" placeholder="Title" @bind-Value="@post.Title" />
    </div>

    <div class="form-group col-md-4 mb-2 w-100 h-75">
        <label for="Password">Password</label>
        <InputTextArea type="Text" class="form-control" style="height:80%" placeholder="Description" @bind-Value="@post.Description" />
    </div>

    <button type="submit" class="btn btn-primary btn-lg">Publish</button>

    <div style="margin-top:2vh;">
        <ValidationSummary />
    </div>
</EditForm>
