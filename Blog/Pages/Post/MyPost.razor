@page "/MyPost"
@using Blog.Logic.Dto.PostDtos;


<h3>Posts created by our users</h3>

@inject Blog.Logic.Services.Interfaces.IPostService _postService
@inject NavigationManager navManager

@code {

    IEnumerable<PostDto> posts;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var username = authenticationState.Result.User.Identity.Name;
        await LoadPostsAsync(username);
    }

    private async Task LoadPostsAsync(string username)
    {
        while (true)
        {
            posts = await _postService.GetAllEditableAndDeletableByUser(username);
            StateHasChanged();
            await Task.Delay(2000);
        }
    }
    private void PassToEdit(string id)
    {
        navManager.NavigateTo($"EditPost/{id}", forceLoad: true);
    }

    private void DeletePost(Guid id)
    {
        _postService.Delete(id);
    }
}


<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Body Of Post</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var post in posts)
        {
            <tr>
                <td>@post.Id</td>
                <td>@post.Title</td>
                <td>@post.Description</td>
                <td><button @onclick="() => PassToEdit(post.Id.ToString())">Edit</button> <button @onclick="() => DeletePost(post.Id)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>